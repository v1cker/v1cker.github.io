[{"title":"PHP学习笔记（一）","date":"2017-02-10T00:38:01.000Z","path":"2017/02/10/PHP学习笔记（一）/","text":"PHP学习小记 php输出 1&lt;?php echo \"hello world\"; ?&gt; php字符串连接符 在php中字符串连接符是用点（.）来表示的，这一点比较特殊 1&lt;?php echo \"Hi,\".\"imooc!\"; ?&gt; php注释 在PHP中也有注释语句：用双斜杠（//）来表示。多行注释：用(/**/)来表示 变量1234&lt;?php $var = \"haha\"; echo $var;?&gt; ”var_dump”函数可以将我们的变量的数据类型（后面小节会做介绍）显示出来。 1234567&lt;?php $var_name = \"苹果\";$n = 10;var_dump($var_name);var_dump($n);?&gt; 整型 整型（integer）：类似于常见的整数。它可以用十进制、八进制、十六进制指定。十进制就是日常使用的数字；八进制，数字前必须加上“0”；十六进制，数字前必须加“0x” 。 字符串 当输出的字符串遇到 $ 符号的时候，使用单引号 12$a = '$ is very good!';echo $a; 当我的字符串很长怎么办？我们可以使用Heredoc结构形式的方法来解决该问题，首先使用定界符表示字符串（&lt;&lt;&lt;），接着在“&lt;&lt;&lt;“之后提供一个标识符GOD，然后是字符串，最后以提供的这个标识符结束字符串. 123456789&lt;?php $string1 = &lt;&lt;&lt;GOD我有一只小毛驴，我从来也不骑。有一天我心血来潮，骑着去赶集。我手里拿着小皮鞭，我心里正得意。不知怎么哗啦啦啦啦，我摔了一身泥.GOD;echo $string1;?&gt; php读取文件 1234567891011121314&lt;?php //首先采用“fopen”函数打开文件，得到返回值的就是资源类型。file_handle =fopen(\"/data/webroot/resource/php/f.txt\",\"r\");if ($file_handle)&#123; //接着采用while循环（后面语言结构语句中的循环结构会详细介绍）一行行地读取文件，然后输出每行的文字 while (!feof($file_handle)) &#123; //判断是否到最后一行 $line = fgets($file_handle); //读取一行文本 echo $line; //输出一行文本 echo \"&lt;br /&gt;\"; //换行 &#125;&#125;fclose($file_handle);//关闭文件?&gt; php空类型 NULL（NULL）：NULL是空类型，对大小写不敏感，NULL类型只有一个取值，表示一个变量没有值，当被赋值为NULL，或者尚未被赋值，或者被unset()，这三种情况下变量被认为为NULL。 123$var3 = \"节日快乐！\";unset($var3);var_dump($var3); php三元运算符 (“?:”)三元运算符也是一个比较运算符，对于表达式(expr1)?(expr2):(expr3)，如果expr1的值为true，则此表达式的值为expr2，否则为expr3。 12345&lt;?php $a = 78;//成绩 $b = $a&gt;=60?\"及格\":\"不及格\"; echo $b;?&gt; php条件结构 if else else if 12345678910111213&lt;?phpdate_default_timezone_set('asia/shanghai');$week = date(\"w\");//获取当天星期几$info = \"\";//提示信息if($week == 1)&#123; $info = \"上午有课\";&#125;else if($week == 3)&#123; $info = \"下午有课\"; &#125;else&#123; $info = \"今天没课\";&#125;echo $info; //输出提示信息?&gt; switch 123456789101112131415161718&lt;?php$num = rand(1,50);//获取1至50的随机数$info = \"\";//提示信息switch($num)&#123; case 1: $info = \"恭喜你！中了一等奖！\"; break; case 2: $info = \"恭喜你！中了二等奖！\"; break; case 3: $info = \"恭喜你！中了三等奖！\"; break; default: $info = \"很遗憾！你没有中奖！\";&#125; echo $info; //输出是否中奖?&gt; php循环结构 while 123456789101112&lt;?php$sum = 12;//小宠物当前的饥饿程度echo \"我饿啦:-(\";echo \"&lt;br /&gt;\";while($sum&lt;100)&#123;//小宠物的饥饿程度到100，表示小宠物吃饱啦,不用继续喂了，没吃饱继续喂食 $num = rand(1,20);//随机数，模拟喂食小宠物的小面包 $sum = $sum + $num; //小宠物吃小面包 echo \"我还没吃饱呢！\"; echo \"&lt;br /&gt;\";&#125;echo \"终于吃饱啦^_^\";?&gt; do while 123456789101112131415161718&lt;?php //while例子 $sum = 0; $num = rand(1,6); //获取1至6的随机数，模拟掷骰子 $sum = $sum + $num;//前进步长 while($num==6)&#123; $num = rand(1,6);//获取1至6的随机数，模拟掷骰子 $sum = $sum + $num;//前进步长 &#125;; echo \"while例子执行完毕，前进：\".$sum .\"&lt;br /&gt;\"; //do...while例子 $sum = 0; do&#123; $num = rand(1,6);//获取1至6的随机数，模拟掷骰子 $sum = $sum + $num;//前进步长 &#125;while($num==6); echo \"do...while例子执行完毕，前进：\".$sum .\"&lt;br /&gt;\";?&gt; for 12345678910111213141516&lt;?php//for语句写法for($i=1,$sum=0;$i&lt;=100;$i++)&#123; $sum = $sum + $i; // 累加求和&#125;echo \"for语句的运行结果：\".$sum.\"&lt;br /&gt;\" ;//while语句写法$i = 1 ; // 从1开始累加$sum = 0; //初始化和为0while($i&lt;=100)&#123; //判断是否小于100 $sum = $sum + $i; // 累加求和 $i++; //递增1&#125;echo \"while语句的运行结果：\".$sum.\"&lt;br /&gt;\" ;?&gt; 在PHP中foreach循环语句，常用于遍历数组，一般有两种使用方式:不取下标、取下标。 123456789101112131415161718192021&lt;?php$students = array('2010'=&gt;'令狐冲','2011'=&gt;'林平之','2012'=&gt;'曲洋','2013'=&gt;'任盈盈','2014'=&gt;'向问天','2015'=&gt;'任我行','2016'=&gt;'冲虚','2017'=&gt;'方正','2018'=&gt;'岳不群','2019'=&gt;'宁中则',);//10个学生的学号和姓名，用数组存储//使用循环结构遍历数组,获取学号和姓名 foreach($students as $key =&gt; $v)&#123; echo $key.\":\".$v;//输出（打印）学号：姓名 echo \"&lt;br /&gt;\";&#125;?&gt; 循环嵌套 1234567891011121314151617181920212223242526&lt;?php $students = array('2010'=&gt;array('令狐冲',\"59\"),'2011'=&gt;array('林平之',\"44\"),'2012'=&gt;array('曲洋',\"89\"),'2013'=&gt;array('任盈盈',\"92\"),'2014'=&gt;array('向问天',\"93\"),'2015'=&gt;array('任我行',\"87\"),'2016'=&gt;array('冲虚',\"58\"),'2017'=&gt;array('方正',\"74\"),'2018'=&gt;array('岳不群',\"91\"),'2019'=&gt;array('宁中则',\"90\"),);//10个学生的学号、姓名、分数，用数组存储 foreach($students as $key=&gt;$val)&#123; //使用循环结构遍历数组,获取学号 echo $key; //输出学号 echo \":\"; //循环输出姓名和分数 foreach($val as $v) &#123; echo $v; &#125; echo \"&lt;br /&gt;\";&#125;?&gt;","tags":[]},{"title":"1.1 python 输入输出","date":"2017-02-10T00:14:17.000Z","path":"2017/02/10/1-1-python-输入输出/","text":"output 12345&gt;&gt;&gt;print ‘hello world’&gt;&gt;&gt;__代表最后一个表达式的值&gt;&gt;&gt;print “%s is number %d!” % (“python”,1)python is number 1! input 1234567891011&gt;&gt;&gt;user = raw_input(‘Enter login name:’)Enter login name:root&gt;&gt;&gt;print “Your input name is”, userYour input name is root&gt;&gt;&gt;num = raw_input(‘Now enter a number:’)Now enter a number:1024&gt;&gt;&gt;print type(num) //&gt;&gt;&gt;print ‘Doubling your number: %d’ % (int(num) * 2)Doubling your number:2048强制转换1024字符串为int类型&gt;&gt;&gt;print type(num)","tags":[]},{"title":"Hello World","date":"2017-02-07T08:13:00.000Z","path":"2017/02/07/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]